function [lineIndex] = secondclustering(myMembers,centriodMember,skelLength)
%function: use slope and intercept to perform second layer clustering
%input: myMembers - orginal index of components
%       centriodMember - centriod of components
%       skelLength - skelLength of components
%output: lineIndex - clustering result

%compute Euclidean distance between components
num = length(myMembers);
distance = triu(squareform(pdist(centriodMember)));
index = distance==0;
distance(index) = Inf;
[minDist,minIndex] = min(distance,[],2);
xMin = min(centriodMember(:,1));
centriodMember(:,1) = centriodMember(:,1)-xMin;
xPairs = zeros(num-1,2);
yPairs = zeros(num-1,2);
pairIndex = zeros(num-1,2);
twoFeatures= zeros(num-1,2);
for i = 1:num-1
    if minDist(i,1)<(skelLength(i)+skelLength(minIndex(i)))/2 % they are considered as pairs
        xPairs(i,1) = centriodMember(i,1);
        xPairs(i,2) = centriodMember(minIndex(i),1);
        yPairs(i,1) = centriodMember(i,2);
        yPairs(i,2) = centriodMember(minIndex(i),2);
        twoFeatures(i,:) = polyfit(xPairs(i,:),yPairs(i,:),1);
        pairIndex(i,1) = myMembers(i);
        pairIndex(i,2) = myMembers(minIndex(i));
    end
end
index = find(twoFeatures(:,1)~=0);
if ~isempty(index)
twoFeatures = twoFeatures(index,:);
[slope,slope_mu,slope_sigma] = featureNormalize(twoFeatures(:,1));
[intercept,intercept_mu,intercept_sigma] = featureNormalize(twoFeatures(:,2));
x = [slope';intercept'];

bandwidth = 2.5;
tic
[clustCent,point2cluster,clustMembsCell] = MeanShiftCluster(x,bandwidth);
toc

numClust = length(clustMembsCell);

figure,hold on
cVec = 'bgrcmykbgrcmykbgrcmykbgrcmyk';%, cVec = [cVec cVec];
for k = 1:min(numClust,length(cVec))
    myMembers2 = clustMembsCell{k};
    myClustCen = clustCent(:,k);
    plot(x(1,myMembers2),x(2,myMembers2),[cVec(k) '.'])
    plot(myClustCen(1),myClustCen(2),'o','MarkerEdgeColor','k','MarkerFaceColor',cVec(k), 'MarkerSize',10)
end
title(['no shifting, numClust:' int2str(numClust)])

for k = 1:numClust
    cluster = clustMembsCell{k};
    if length(cluster)>=3
    clusterPair = pairIndex(cluster,:);
    lineIndex(i,:) = unique(clusterPair(:))';
    end
end

else
    lineIndex = 0;
end

  
  



